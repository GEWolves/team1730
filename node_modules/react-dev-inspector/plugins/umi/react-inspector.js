"use strict";
/**
 * preset plugins for umi3
 */
Object.defineProperty(exports, "__esModule", { value: true });
const middlewares_1 = require("../webpack/middlewares");
function inspectorPlugin(api) {
    const inspectorConfig = api.userConfig.inspectorConfig;
    api.describe({
        key: 'inspectorConfig',
        config: {
            schema(joi) {
                return joi.object();
            },
        },
        enableBy: api.EnableBy.register,
    });
    api.modifyBabelOpts((babelOptions) => {
        var _a;
        babelOptions.plugins.unshift([
            'react-dev-inspector/plugins/babel',
            {
                cwd: inspectorConfig === null || inspectorConfig === void 0 ? void 0 : inspectorConfig.cwd,
                excludes: [
                    /\.umi(-production)?\//,
                    ...(_a = inspectorConfig === null || inspectorConfig === void 0 ? void 0 : inspectorConfig.excludes) !== null && _a !== void 0 ? _a : [],
                ],
            },
        ]);
        return babelOptions;
    });
    /**
     * Inspector component open file into IDE via `/__open-stack-frame-in-editor/relative` api,
     * which is created by `errorOverlayMiddleware` and
     * defined in 'react-dev-utils/launchEditorEndpoint'
     *
     * due to umi3 not use webpack devServer,
     * so need add launch editor middleware manually
     */
    api.addBeforeMiddewares(middlewares_1.createLaunchEditorMiddleware);
}
exports.default = inspectorPlugin;
