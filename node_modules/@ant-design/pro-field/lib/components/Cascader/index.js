"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/cascader/style");

var _cascader = _interopRequireDefault(require("antd/es/cascader"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@ant-design/icons");

var _classnames = _interopRequireDefault(require("classnames"));

var _Select = require("../Select");

var _proProvider = require("@ant-design/pro-provider");

var _excluded = ["radioType", "renderFormItem", "mode", "render"];

/**
 * 级联选择组件
 *
 * @param param0
 * @param ref
 */
var FieldCascader = function FieldCascader(_ref, ref) {
  var _rest$fieldProps2;

  var radioType = _ref.radioType,
      renderFormItem = _ref.renderFormItem,
      mode = _ref.mode,
      render = _ref.render,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var layoutClassName = getPrefixCls('pro-field-cascader');

  var _useFieldFetchData = (0, _Select.useFieldFetchData)(rest),
      _useFieldFetchData2 = (0, _slicedToArray2.default)(_useFieldFetchData, 3),
      loading = _useFieldFetchData2[0],
      options = _useFieldFetchData2[1],
      _fetchData = _useFieldFetchData2[2];

  var intl = (0, _proProvider.useIntl)();
  var cascaderRef = (0, _react.useRef)();
  (0, _react.useImperativeHandle)(ref, function () {
    return (0, _objectSpread3.default)((0, _objectSpread3.default)({}, cascaderRef.current || {}), {}, {
      fetchData: function fetchData() {
        return _fetchData();
      }
    });
  });
  var optionsValueEnum = (0, _react.useMemo)(function () {
    var _rest$fieldProps;

    /**
     * Support cascader fieldNames
     *
     * @see https://ant.design/components/cascader-cn/#header
     */
    var _ref2 = ((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.fieldNames) || {},
        _ref2$value = _ref2.value,
        valuePropsName = _ref2$value === void 0 ? 'value' : _ref2$value,
        _ref2$label = _ref2.label,
        labelPropsName = _ref2$label === void 0 ? 'label' : _ref2$label,
        _ref2$children = _ref2.children,
        childrenPropsName = _ref2$children === void 0 ? 'children' : _ref2$children;

    var traverseOptions = function traverseOptions(_options) {
      return (_options === null || _options === void 0 ? void 0 : _options.length) > 0 ? _options === null || _options === void 0 ? void 0 : _options.reduce(function (pre, cur) {
        var label = cur[labelPropsName],
            value = cur[valuePropsName],
            children = cur[childrenPropsName];
        return (0, _objectSpread3.default)((0, _objectSpread3.default)({}, pre), {}, (0, _defineProperty2.default)({}, value, label), traverseOptions(children));
      }, {}) : {};
    };

    return traverseOptions(options);
  }, [options, (_rest$fieldProps2 = rest.fieldProps) === null || _rest$fieldProps2 === void 0 ? void 0 : _rest$fieldProps2.fieldNames]);

  if (mode === 'read') {
    var dom = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, (0, _Select.proFieldParsingText)(rest.text, (0, _Select.ObjToMap)(rest.valueEnum || optionsValueEnum)));

    if (render) {
      return render(rest.text, (0, _objectSpread3.default)({
        mode: mode
      }, rest.fieldProps), dom) || null;
    }

    return dom;
  }

  if (mode === 'edit') {
    var _rest$fieldProps3;

    var _dom = /*#__PURE__*/_react.default.createElement(_cascader.default, (0, _extends2.default)({
      ref: cascaderRef,
      suffixIcon: loading ? /*#__PURE__*/_react.default.createElement(_icons.LoadingOutlined, null) : undefined,
      placeholder: intl.getMessage('tableForm.selectPlaceholder', '请选择')
    }, rest.fieldProps, {
      className: (0, _classnames.default)((_rest$fieldProps3 = rest.fieldProps) === null || _rest$fieldProps3 === void 0 ? void 0 : _rest$fieldProps3.className, layoutClassName),
      options: options
    }));

    if (renderFormItem) {
      return renderFormItem(rest.text, (0, _objectSpread3.default)({
        mode: mode
      }, rest.fieldProps), _dom) || null;
    }

    return _dom;
  }

  return null;
};

var _default = /*#__PURE__*/_react.default.forwardRef(FieldCascader);

exports.default = _default;