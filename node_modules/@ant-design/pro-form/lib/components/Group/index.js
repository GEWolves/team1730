"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/space/style");

var _space = _interopRequireDefault(require("antd/es/space"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@ant-design/icons");

var _FieldContext = _interopRequireDefault(require("../../FieldContext"));

require("./index.less");

var _proUtils = require("@ant-design/pro-utils");

var _classnames = _interopRequireDefault(require("classnames"));

var Group = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _React$useContext = _react.default.useContext(_FieldContext.default),
      groupProps = _React$useContext.groupProps;

  var _groupProps$props = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, groupProps), props),
      children = _groupProps$props.children,
      collapsible = _groupProps$props.collapsible,
      defaultCollapsed = _groupProps$props.defaultCollapsed,
      style = _groupProps$props.style,
      labelLayout = _groupProps$props.labelLayout,
      _groupProps$props$tit = _groupProps$props.title,
      title = _groupProps$props$tit === void 0 ? props.label : _groupProps$props$tit,
      tooltip = _groupProps$props.tooltip,
      _groupProps$props$ali = _groupProps$props.align,
      align = _groupProps$props$ali === void 0 ? 'start' : _groupProps$props$ali,
      direction = _groupProps$props.direction,
      _groupProps$props$siz = _groupProps$props.size,
      size = _groupProps$props$siz === void 0 ? 32 : _groupProps$props$siz,
      titleStyle = _groupProps$props.titleStyle,
      titleRender = _groupProps$props.titleRender,
      spaceProps = _groupProps$props.spaceProps,
      extra = _groupProps$props.extra,
      autoFocus = _groupProps$props.autoFocus;

  var _useMountMergeState = (0, _proUtils.useMountMergeState)(function () {
    return defaultCollapsed || false;
  }, {
    value: props.collapsed,
    onChange: props.onCollapse
  }),
      _useMountMergeState2 = (0, _slicedToArray2.default)(_useMountMergeState, 2),
      collapsed = _useMountMergeState2[0],
      setCollapsed = _useMountMergeState2[1];

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var className = getPrefixCls('pro-form-group');

  var collapsibleButton = collapsible && /*#__PURE__*/_react.default.createElement(_icons.RightOutlined, {
    style: {
      marginRight: 8
    },
    rotate: !collapsed ? 90 : undefined
  });

  var label = /*#__PURE__*/_react.default.createElement(_proUtils.LabelIconTip, {
    label: collapsibleButton ? /*#__PURE__*/_react.default.createElement("div", null, collapsibleButton, title) : title,
    tooltip: tooltip
  });

  var titleDom = titleRender ? titleRender(label, props) : label;
  var hiddenChildren = [];

  var renderChild = _react.default.Children.toArray(children).map(function (element, index) {
    var _element$props;

    if ( /*#__PURE__*/_react.default.isValidElement(element) && (element === null || element === void 0 ? void 0 : (_element$props = element.props) === null || _element$props === void 0 ? void 0 : _element$props.hidden)) {
      hiddenChildren.push(element);
      return null;
    }

    if (index === 0 && /*#__PURE__*/_react.default.isValidElement(element) && autoFocus) {
      return /*#__PURE__*/_react.default.cloneElement(element, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, element.props), {}, {
        autoFocus: autoFocus
      }));
    }

    return element;
  });

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(className, (0, _defineProperty2.default)({}, "".concat(className, "-twoLine"), labelLayout === 'twoLine')),
    style: style,
    ref: ref
  }, hiddenChildren.length > 0 && /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: 'none'
    }
  }, hiddenChildren), (title || tooltip || extra) && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(className, "-title"),
    style: titleStyle,
    onClick: function onClick() {
      setCollapsed(!collapsed);
    }
  }, extra ? /*#__PURE__*/_react.default.createElement("div", {
    style: {
      display: 'flex',
      width: '100%',
      alignItems: 'center',
      justifyContent: 'space-between'
    }
  }, titleDom, /*#__PURE__*/_react.default.createElement("span", {
    onClick: function onClick(e) {
      return e.stopPropagation();
    }
  }, extra)) : titleDom), collapsible && collapsed ? null : /*#__PURE__*/_react.default.createElement(_space.default, (0, _extends2.default)({}, spaceProps, {
    className: "".concat(className, "-container"),
    size: size,
    align: align,
    direction: direction,
    style: (0, _objectSpread2.default)({
      rowGap: 0
    }, spaceProps === null || spaceProps === void 0 ? void 0 : spaceProps.style)
  }), renderChild));
});

Group.displayName = 'ProForm-Group';
var _default = Group;
exports.default = _default;