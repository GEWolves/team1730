import React from 'react';
import type { SketchPickerProps } from 'react-color';
import type { PopoverProps } from 'antd';
import type { ProFormFieldItemProps } from '../../interface';
declare type ColorPickerProps = SketchPickerProps & {
    value?: string;
    onChange?: (color: string) => void;
};
export declare type ProFormColorPickerProps = ProFormFieldItemProps<ColorPickerProps> & {
    popoverProps?: PopoverProps;
    colors?: string[];
};
declare const _default: React.ForwardRefExoticComponent<{
    fieldProps?: (import("../../interface").FieldProps & SketchPickerProps & {
        value?: string | undefined;
        onChange?: ((color: string) => void) | undefined;
    }) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    cacheForSwr?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: import("@ant-design/pro-utils").ProFieldProps | undefined;
    footerRender?: import("../../interface").LightFilterFooterRender | undefined;
} & Omit<import("../FormItem").ProFormItemProps, "valueType"> & import("../../interface").ExtendsProps & {
    popoverProps?: PopoverProps | undefined;
    colors?: string[] | undefined;
} & React.RefAttributes<any>>;
export default _default;
