"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/space/style");

var _space = _interopRequireDefault(require("antd/es/space"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _react = _interopRequireWildcard(require("react"));

var addArrayKeys = function addArrayKeys(doms) {
  return doms.map(function (dom, index) {
    if (! /*#__PURE__*/_react.default.isValidElement(dom)) {
      // eslint-disable-next-line react/no-array-index-key
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
        key: index
      }, dom);
    }

    return /*#__PURE__*/_react.default.cloneElement(dom, (0, _objectSpread2.default)({
      // eslint-disable-next-line react/no-array-index-key
      key: index
    }, dom === null || dom === void 0 ? void 0 : dom.props));
  });
};
/**
 * 一般用于放多个按钮
 *
 * @param
 */


var FieldOptions = function FieldOptions(_ref, ref) {
  var text = _ref.text,
      type = _ref.mode,
      render = _ref.render,
      fieldProps = _ref.fieldProps;

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var className = getPrefixCls('pro-field-option');
  (0, _react.useImperativeHandle)(ref, function () {
    return {};
  });

  if (render) {
    var doms = render(text, (0, _objectSpread2.default)({
      mode: type
    }, fieldProps), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null));

    if (!doms || (doms === null || doms === void 0 ? void 0 : doms.length) < 1 || !Array.isArray(doms)) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_space.default, {
      size: 16,
      className: className
    }, addArrayKeys(doms));
  }

  if (!text || !Array.isArray(text)) {
    if (! /*#__PURE__*/_react.default.isValidElement(text)) {
      return null;
    }

    return text;
  }

  return /*#__PURE__*/_react.default.createElement(_space.default, {
    size: 16,
    className: className
  }, addArrayKeys(text));
};

var _default = /*#__PURE__*/_react.default.forwardRef(FieldOptions);

exports.default = _default;