"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _umi() {
  const data = require("umi");

  _umi = function _umi() {
    return data;
  };

  return data;
}

function _esbuildLoader() {
  const data = require("esbuild-loader");

  _esbuildLoader = function _esbuildLoader() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = api => {
  api.describe({
    key: 'esbuild',
    config: {
      schema(joi) {
        return joi.object({
          target: joi.alternatives(joi.string(), joi.array().items(joi.string()))
        });
      }

    },
    enableBy: api.EnableBy.config
  });
  api.modifyBundleConfig((memo, {
    type
  }) => {
    if (memo.optimization) {
      const _ref = api.config.esbuild || {},
            _ref$target = _ref.target,
            target = _ref$target === void 0 ? 'es2015' : _ref$target;

      const optsMap = {
        [_umi().BundlerConfigType.csr]: {
          minify: true,
          target
        },
        [_umi().BundlerConfigType.ssr]: {
          target: 'node10',
          minify: true
        }
      };

      const opts = optsMap[type] || optsMap[_umi().BundlerConfigType.csr];

      memo.optimization.minimize = true;
      memo.optimization.minimizer = [new (_esbuildLoader().ESBuildMinifyPlugin)(opts)];
    }

    if (memo.plugins) {
      memo.plugins.push(new (_esbuildLoader().ESBuildPlugin)());
    }

    return memo;
  });
};

exports.default = _default;