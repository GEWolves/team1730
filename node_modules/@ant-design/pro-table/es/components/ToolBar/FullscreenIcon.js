import "antd/es/tooltip/style";
import _Tooltip from "antd/es/tooltip";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useEffect, useState } from 'react';
import { FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';
import { useIntl } from '@ant-design/pro-provider';
import { isBrowser } from '@ant-design/pro-utils';

var FullScreenIcon = function FullScreenIcon() {
  var intl = useIntl();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      fullscreen = _useState2[0],
      setFullscreen = _useState2[1];

  useEffect(function () {
    if (!isBrowser()) {
      return;
    }

    document.onfullscreenchange = function () {
      setFullscreen(!!document.fullscreenElement);
    };
  }, []);
  return fullscreen ? /*#__PURE__*/React.createElement(_Tooltip, {
    title: intl.getMessage('tableToolBar.exitFullScreen', '全屏')
  }, /*#__PURE__*/React.createElement(FullscreenExitOutlined, null)) : /*#__PURE__*/React.createElement(_Tooltip, {
    title: intl.getMessage('tableToolBar.fullScreen', '全屏')
  }, /*#__PURE__*/React.createElement(FullscreenOutlined, null));
};

export default /*#__PURE__*/React.memo(FullScreenIcon);