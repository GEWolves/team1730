import React from 'react';
import type { InputNumberProps } from 'antd';
import type { ProFormFieldItemProps } from '../../interface';
export declare type Value = string | number | undefined;
export declare type ValuePair = Value[];
export declare type RangeInputNumberProps = Omit<InputNumberProps, 'value' | 'defaultValue' | 'onChange' | 'placeholder'> & {
    value?: ValuePair;
    defaultValue?: ValuePair | undefined;
    onChange?: (value?: ValuePair) => void;
};
export declare type ProFormDigitRangeProps = ProFormFieldItemProps<RangeInputNumberProps> & {
    separator?: string;
    separatorWidth?: number;
};
declare const _default: React.ForwardRefExoticComponent<{
    fieldProps?: (import("../../interface").FieldProps & Omit<InputNumberProps<string | number>, "defaultValue" | "placeholder" | "onChange" | "value"> & {
        value?: ValuePair | undefined;
        defaultValue?: ValuePair | undefined;
        onChange?: ((value?: ValuePair | undefined) => void) | undefined;
    }) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    cacheForSwr?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: import("@ant-design/pro-utils").ProFieldProps | undefined;
    footerRender?: import("../../interface").LightFilterFooterRender | undefined;
} & Omit<import("../FormItem").ProFormItemProps, "valueType"> & import("../../interface").ExtendsProps & {
    separator?: string | undefined;
    separatorWidth?: number | undefined;
} & React.RefAttributes<any>>;
export default _default;
