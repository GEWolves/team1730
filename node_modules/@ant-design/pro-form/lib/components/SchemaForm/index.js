"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

require("antd/es/divider/style");

var _divider = _interopRequireDefault(require("antd/es/divider"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _index = _interopRequireWildcard(require("../../index"));

var _proUtils = require("@ant-design/pro-utils");

var _omit = _interopRequireDefault(require("omit.js"));

var _List = _interopRequireDefault(require("../List"));

var _warning = require("rc-util/lib/warning");

var _excluded = ["columns", "layoutType", "steps", "type", "action", "formRef"];
var FormComments = {
  DrawerForm: _index.DrawerForm,
  QueryFilter: _index.QueryFilter,
  LightFilter: _index.LightFilter,
  StepForm: _index.StepsForm.StepForm,
  StepsForm: _index.StepsForm,
  ModalForm: _index.ModalForm
};

var noop = function noop() {};
/**
 * 此组件可以根据 Json Schema 来生成相应的表单,大部分配置与 antd 的 table 列配置相同
 *
 * @see 此组件仍为 beta 版本，api 可能发生变化
 */


function BetaSchemaForm(props) {
  var columns = props.columns,
      _props$layoutType = props.layoutType,
      layoutType = _props$layoutType === void 0 ? 'ProForm' : _props$layoutType,
      _props$steps = props.steps,
      steps = _props$steps === void 0 ? [] : _props$steps,
      _props$type = props.type,
      type = _props$type === void 0 ? 'form' : _props$type,
      action = props.action,
      propsFormRef = props.formRef,
      rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  var Form = FormComments[layoutType] || _index.default;

  var _useState = (0, _react.useState)(rest.current),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      stepCurrent = _useState2[0],
      setStepCurrent = _useState2[1];

  var formRef = (0, _react.useRef)(props.form);

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      formInited = _useState4[0],
      setFormInited = _useState4[1];

  var refMap = (0, _react.useMemo)(function () {
    var obj = {
      form: formRef.current
    };
    Object.defineProperty(obj, 'form', {
      get: function get() {
        return formRef.current || {
          getFieldValue: noop,
          getFieldsValue: noop,
          resetFields: noop,
          setFieldsValue: noop
        };
      }
    });
    return obj;
  }, []);

  var _useState5 = (0, _react.useState)(0),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      updateTime = _useState6[0],
      updateFormRender = _useState6[1];

  (0, _react.useImperativeHandle)(propsFormRef, function () {
    return refMap.form;
  }, // fix StepsForm formRef not change
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [stepCurrent, formInited]);
  /**
   * 生成子项，方便被 table 接入
   *
   * @param items
   */

  var genItems = (0, _react.useCallback)(function (items, update) {
    if (layoutType === 'StepsForm') return [];
    return items.filter(function (originItem) {
      if (originItem.hideInForm && type === 'form') {
        return false;
      }

      return true;
    }).sort(function (a, b) {
      if (b.order || a.order) {
        return (b.order || 0) - (a.order || 0);
      }

      return (b.index || 0) - (a.index || 0);
    }).map(function (originItem, index) {
      var _item$dataIndex;

      var title = (0, _proUtils.runFunction)(originItem.title, originItem, 'form', /*#__PURE__*/_react.default.createElement(_proUtils.LabelIconTip, {
        label: originItem.title,
        tooltip: originItem.tooltip || originItem.tip
      }));
      var item = (0, _proUtils.omitUndefined)({
        name: originItem.name,
        valueType: (0, _proUtils.runFunction)(originItem.valueType, {}),
        key: originItem.key,
        columns: originItem.columns,
        fieldProps: (0, _proUtils.runFunction)(originItem.fieldProps, refMap.form, originItem),
        valueEnum: originItem.valueEnum,
        dataIndex: originItem.key || originItem.dataIndex,
        initialValue: originItem.initialValue,
        formItemProps: (0, _proUtils.runFunction)(originItem.formItemProps, refMap.form, originItem),
        width: originItem.width,
        render: originItem.render,
        renderFormItem: originItem.renderFormItem,
        index: originItem.index,
        readonly: originItem.readonly,
        transform: originItem.transform,
        colSize: originItem.colSize,
        className: originItem.className,
        renderText: originItem.renderText,
        request: originItem.request,
        params: originItem.params,
        tooltip: originItem.tooltip || originItem.tip,
        title: title,
        dependencies: originItem.dependencies,
        proFieldProps: originItem.proFieldProps
      }); // 几种特殊的 value 不处理

      if (item.valueType && typeof item.valueType === 'string' && ['index', 'indexBorder', 'option'].includes(item === null || item === void 0 ? void 0 : item.valueType)) {
        return null;
      }

      var key = item.key || ((_item$dataIndex = item.dataIndex) === null || _item$dataIndex === void 0 ? void 0 : _item$dataIndex.toString()) || index;

      if (item.valueType === 'group') {
        if (!item.columns || !Array.isArray(item.columns)) return null;
        return /*#__PURE__*/_react.default.createElement(_index.ProFormGroup, (0, _extends2.default)({
          key: key,
          label: title
        }, item.fieldProps), genItems(item.columns));
      }

      if (item.valueType === 'formList' && item.dataIndex) {
        if (!item.columns || !Array.isArray(item.columns)) return null;
        return /*#__PURE__*/_react.default.createElement(_List.default, (0, _extends2.default)({
          key: key,
          name: item.dataIndex,
          label: item.title,
          initialValue: item.initialValue
        }, item.fieldProps), genItems(item.columns));
      }

      if (item.valueType === 'formSet' && item.dataIndex) {
        if (!item.columns || !Array.isArray(item.columns)) return null;
        return /*#__PURE__*/_react.default.createElement(_index.ProFormFieldSet, (0, _extends2.default)({}, item.formItemProps, {
          key: key,
          initialValue: item.initialValue,
          name: item.dataIndex,
          label: item.title
        }, item.fieldProps), genItems(item.columns, update));
      }
      /** 分割线 */


      if (item.valueType === 'divider') {
        return /*#__PURE__*/_react.default.createElement(_divider.default, (0, _extends2.default)({}, item.fieldProps, {
          key: index
        }));
      }
      /** ProFormDependency */


      if (item.valueType === 'dependency') {
        var _item$fieldProps, _item$fieldProps2;

        (0, _warning.noteOnce)(Array.isArray((_item$fieldProps = item.fieldProps) === null || _item$fieldProps === void 0 ? void 0 : _item$fieldProps.name), 'SchemaForm: fieldProps.name should be NamePath[] when valueType is "dependency"');
        (0, _warning.noteOnce)(typeof item.columns === 'function', 'SchemaForm: columns should be a function when valueType is "dependency"');
        if (!Array.isArray((_item$fieldProps2 = item.fieldProps) === null || _item$fieldProps2 === void 0 ? void 0 : _item$fieldProps2.name)) return null;
        return /*#__PURE__*/_react.default.createElement(_index.ProFormDependency, (0, _extends2.default)({}, item.fieldProps, {
          key: key
        }), function (values) {
          if (!item.columns || typeof item.columns !== 'function') return null;
          return genItems(item.columns(values));
        });
      }
      /** 公用的 类型 props */


      var formFieldProps = (0, _objectSpread2.default)((0, _objectSpread2.default)({
        label: item.title
      }, (0, _omit.default)(item, ['dataIndex', 'width', 'render', 'renderFormItem', 'renderText', 'title'])), {}, {
        key: key,
        name: item.dataIndex,
        width: item.width,
        formItemProps: item.formItemProps,
        fieldProps: item.fieldProps,
        render: (item === null || item === void 0 ? void 0 : item.render) ? function (dom, entity, renderIndex) {
          var _item$render;

          return item === null || item === void 0 ? void 0 : (_item$render = item.render) === null || _item$render === void 0 ? void 0 : _item$render.call(item, dom, entity, renderIndex, action === null || action === void 0 ? void 0 : action.current, (0, _objectSpread2.default)({
            type: type
          }, item));
        } : undefined
      });

      var defaultRender = function defaultRender() {
        return /*#__PURE__*/_react.default.createElement(_index.ProFormField, (0, _extends2.default)({}, formFieldProps, {
          ignoreFormItem: true
        }));
      };

      if (item === null || item === void 0 ? void 0 : item.renderFormItem) {
        var _item$renderFormItem;

        var formDom = item === null || item === void 0 ? void 0 : (_item$renderFormItem = item.renderFormItem) === null || _item$renderFormItem === void 0 ? void 0 : _item$renderFormItem.call(item, (0, _objectSpread2.default)((0, _objectSpread2.default)({
          type: type
        }, item), {}, {
          originProps: originItem
        }), (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {
          defaultRender: defaultRender,
          type: type
        }), refMap.form);

        if (formDom === false || formDom === undefined || formDom === null) {
          return null;
        }
      }

      return /*#__PURE__*/_react.default.createElement(_index.ProFormField, (0, _extends2.default)({}, formFieldProps, {
        // eslint-disable-next-line react/no-array-index-key
        key: "".concat(key, "-").concat(index),
        transform: item.transform,
        renderFormItem: (item === null || item === void 0 ? void 0 : item.renderFormItem) ? function (_, config) {
          var _item$renderFormItem2;

          var renderConfig = (0, _proUtils.omitUndefined)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), {}, {
            onChange: undefined
          }));
          return item === null || item === void 0 ? void 0 : (_item$renderFormItem2 = item.renderFormItem) === null || _item$renderFormItem2 === void 0 ? void 0 : _item$renderFormItem2.call(item, (0, _objectSpread2.default)((0, _objectSpread2.default)({
            type: type
          }, item), {}, {
            originProps: originItem
          }), (0, _objectSpread2.default)((0, _objectSpread2.default)({}, renderConfig), {}, {
            defaultRender: defaultRender,
            type: type
          }), refMap.form);
        } : undefined
      }));
    });
  }, // eslint-disable-next-line react-hooks/exhaustive-deps
  [action, layoutType, type]);
  var needRealUpdate = (0, _react.useMemo)(function () {
    if (layoutType === 'StepsForm') return [];
    return columns.some(function (item) {
      return item.renderFormItem || typeof item.fieldProps === 'function' || typeof item.formItemProps === 'function';
    });
  }, [columns, layoutType]);

  var onCurrentChange = function onCurrentChange(current) {
    var _rest$onCurrentChange;

    (_rest$onCurrentChange = rest.onCurrentChange) === null || _rest$onCurrentChange === void 0 ? void 0 : _rest$onCurrentChange.call(rest, current);
    setStepCurrent(current);
  };

  var getDomList = function getDomList() {
    return genItems(columns, updateTime);
  };

  if (layoutType === 'StepsForm') {
    return /*#__PURE__*/_react.default.createElement(_index.StepsForm, (0, _extends2.default)({
      formRef: formRef
    }, rest, {
      onCurrentChange: onCurrentChange
    }), steps === null || steps === void 0 ? void 0 : steps.map(function (item, index) {
      return /*#__PURE__*/_react.default.createElement(BetaSchemaForm, (0, _extends2.default)({}, item, {
        key: index,
        layoutType: "StepForm",
        columns: columns[index]
      }));
    }));
  }
  /** 如果是行内模式 */


  if (layoutType === 'Embed') return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, getDomList());
  return /*#__PURE__*/_react.default.createElement(Form, (0, _extends2.default)({
    formRef: formRef
  }, rest, {
    onInit: function onInit() {
      var _rest$onInit;

      setFormInited(true);

      if (needRealUpdate) {
        updateFormRender(updateTime + 1);
      }

      for (var _len = arguments.length, restValue = new Array(_len), _key = 0; _key < _len; _key++) {
        restValue[_key] = arguments[_key];
      }

      rest === null || rest === void 0 ? void 0 : (_rest$onInit = rest.onInit) === null || _rest$onInit === void 0 ? void 0 : _rest$onInit.call.apply(_rest$onInit, [rest].concat(restValue));
    },
    onValuesChange: function onValuesChange() {
      var _rest$onValuesChange;

      if (needRealUpdate) {
        updateFormRender(updateTime + 1);
      }

      for (var _len2 = arguments.length, restValue = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        restValue[_key2] = arguments[_key2];
      }

      rest === null || rest === void 0 ? void 0 : (_rest$onValuesChange = rest.onValuesChange) === null || _rest$onValuesChange === void 0 ? void 0 : _rest$onValuesChange.call.apply(_rest$onValuesChange, [rest].concat(restValue));
    }
  }), getDomList());
}

var _default = BetaSchemaForm;
exports.default = _default;