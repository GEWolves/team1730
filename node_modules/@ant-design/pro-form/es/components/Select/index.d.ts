import React from 'react';
import type { SelectProps } from 'antd';
import type { ProSchema } from '@ant-design/pro-utils';
import type { ProFormFieldItemProps } from '../../interface';
export declare type ProFormSelectProps<T = any> = ProFormFieldItemProps<SelectProps<T> & {
    /**
     * 是否在输入框聚焦时触发搜索
     *
     * @default false
     */
    searchOnFocus?: boolean;
    /**
     * 选择完一个之后是否清空搜索项重新搜索
     *
     * @default false
     */
    resetAfterSelect?: boolean;
    /** 自定义选项渲染 */
    optionItemRender?: (item: T) => React.ReactNode;
}> & {
    valueEnum?: ProSchema['valueEnum'];
    params?: ProSchema['params'];
    request?: ProSchema['request'];
    /** 防抖动时间 默认10 单位ms */
    debounceTime?: number;
    options?: SelectProps<any>['options'] | string[];
    mode?: SelectProps<any>['mode'] | 'single';
    showSearch?: SelectProps<any>['showSearch'];
    readonly?: boolean;
};
declare const ProFormSearchSelect: <T>(props: ProFormSelectProps<T>) => React.ReactElement;
declare const WrappedProFormSelect: (<T = any>(props: ProFormSelectProps<T>) => React.ReactElement) & {
    SearchSelect: typeof ProFormSearchSelect;
};
export default WrappedProFormSelect;
