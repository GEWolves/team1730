"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/date-picker/style");

var _datePicker = _interopRequireDefault(require("antd/es/date-picker"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

require("antd/es/tooltip/style");

var _tooltip = _interopRequireDefault(require("antd/es/tooltip"));

var _react = _interopRequireDefault(require("react"));

var _proUtils = require("@ant-design/pro-utils");

var _proProvider = require("@ant-design/pro-provider");

var _moment = _interopRequireDefault(require("moment"));

/**
 * 与当前的时间进行比较 http://momentjs.cn/docs/displaying/fromnow.html
 *
 * @param
 */
var FieldFromNow = function FieldFromNow(_ref) {
  var text = _ref.text,
      mode = _ref.mode,
      render = _ref.render,
      renderFormItem = _ref.renderFormItem,
      format = _ref.format,
      fieldProps = _ref.fieldProps;
  var intl = (0, _proProvider.useIntl)();

  if (mode === 'read') {
    var dom = /*#__PURE__*/_react.default.createElement(_tooltip.default, {
      title: (0, _moment.default)(text).format((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'YYYY-MM-DD HH:mm:ss')
    }, (0, _moment.default)(text).fromNow());

    if (render) {
      return render(text, (0, _objectSpread2.default)({
        mode: mode
      }, fieldProps), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, dom));
    }

    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, dom);
  }

  if (mode === 'edit' || mode === 'update') {
    var placeholder = intl.getMessage('tableForm.selectPlaceholder', '请选择');
    var momentValue = (0, _proUtils.parseValueToMoment)(fieldProps.value);

    var _dom = /*#__PURE__*/_react.default.createElement(_datePicker.default, (0, _extends2.default)({
      placeholder: placeholder,
      showTime: true
    }, fieldProps, {
      value: momentValue
    }));

    if (renderFormItem) {
      return renderFormItem(text, (0, _objectSpread2.default)({
        mode: mode
      }, fieldProps), _dom);
    }

    return _dom;
  }

  return null;
};

var _default = FieldFromNow;
exports.default = _default;