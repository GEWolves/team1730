import type { ProTableProps } from './index';
import type { DensitySize } from './components/ToolBar/DensityIcon';
import type { ActionType } from './typing';
import type { TableColumnType } from 'antd';
import type { ProFormInstance } from '@ant-design/pro-form';
export declare type ColumnsState = {
    show?: boolean;
    fixed?: 'right' | 'left' | undefined;
    order?: number;
    disable?: boolean | {
        checkbox: boolean;
        icon: boolean;
    };
};
export declare type UseContainerProps<T = any> = {
    columnsStateMap?: Record<string, ColumnsState>;
    onColumnsStateChange?: (map: Record<string, ColumnsState>) => void;
    size?: DensitySize;
    defaultSize?: DensitySize;
    onSizeChange?: (size: DensitySize) => void;
    columns?: TableColumnType<T>[];
    columnsState?: ProTableProps<any, any, any>['columnsState'];
};
declare function useContainer(props?: UseContainerProps): {
    action: ActionType | undefined;
    setAction: (newAction?: ActionType | undefined) => void;
    sortKeyColumns: string[];
    setSortKeyColumns: (keys: string[]) => void;
    propsRef: import("react").MutableRefObject<ProTableProps<any, any, any> | undefined>;
    columnsMap: Record<string, ColumnsState>;
    keyWords: string | undefined;
    setKeyWords: (k: string | undefined) => void;
    setTableSize: (value: DensitySize) => void;
    tableSize: DensitySize;
    prefixName: any;
    setPrefixName: (name: any) => void;
    setEditorTableForm: (form: ProFormInstance<any>) => void;
    editableForm: ProFormInstance<any> | undefined;
    setColumnsMap: (value: Record<string, ColumnsState>) => void;
    columns: TableColumnType<any>[] | undefined;
    clearPersistenceStorage: () => void;
};
declare const Container: import("unstated-next").Container<{
    action: ActionType | undefined;
    setAction: (newAction?: ActionType | undefined) => void;
    sortKeyColumns: string[];
    setSortKeyColumns: (keys: string[]) => void;
    propsRef: import("react").MutableRefObject<ProTableProps<any, any, any> | undefined>;
    columnsMap: Record<string, ColumnsState>;
    keyWords: string | undefined;
    setKeyWords: (k: string | undefined) => void;
    setTableSize: (value: DensitySize) => void;
    tableSize: DensitySize;
    prefixName: any;
    setPrefixName: (name: any) => void;
    setEditorTableForm: (form: ProFormInstance<any>) => void;
    editableForm: ProFormInstance<any> | undefined;
    setColumnsMap: (value: Record<string, ColumnsState>) => void;
    columns: TableColumnType<any>[] | undefined;
    clearPersistenceStorage: () => void;
}, UseContainerProps<any>>;
export declare type ContainerType = typeof useContainer;
export { useContainer };
export default Container;
