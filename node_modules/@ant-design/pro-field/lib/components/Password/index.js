"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/input/style");

var _input = _interopRequireDefault(require("antd/es/input"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

require("antd/es/space/style");

var _space = _interopRequireDefault(require("antd/es/space"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _icons = require("@ant-design/icons");

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _proProvider = require("@ant-design/pro-provider");

var _excluded = ["text", "mode", "render", "renderFormItem", "fieldProps", "proFieldKey"];

/**
 * 最基本的组件，就是个普通的 Input.Password
 *
 * @param
 */
var FieldPassword = function FieldPassword(_ref, ref) {
  var text = _ref.text,
      mode = _ref.mode,
      render = _ref.render,
      renderFormItem = _ref.renderFormItem,
      fieldProps = _ref.fieldProps,
      proFieldKey = _ref.proFieldKey,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var intl = (0, _proProvider.useIntl)();

  var _useMergedState = (0, _useMergedState3.default)(function () {
    return rest.visible || false;
  }, {
    value: rest.visible,
    onChange: rest.onVisible
  }),
      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
      visible = _useMergedState2[0],
      setVisible = _useMergedState2[1];

  if (mode === 'read') {
    var dom = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "-");

    if (text) {
      dom = /*#__PURE__*/_react.default.createElement(_space.default, null, /*#__PURE__*/_react.default.createElement("span", {
        ref: ref
      }, visible ? text : '＊ ＊ ＊ ＊ ＊'), /*#__PURE__*/_react.default.createElement("a", {
        onClick: function onClick() {
          return setVisible(!visible);
        }
      }, visible ? /*#__PURE__*/_react.default.createElement(_icons.EyeOutlined, null) : /*#__PURE__*/_react.default.createElement(_icons.EyeInvisibleOutlined, null)));
    }

    if (render) {
      return render(text, (0, _objectSpread2.default)({
        mode: mode
      }, fieldProps), dom);
    }

    return dom;
  }

  if (mode === 'edit' || mode === 'update') {
    var _dom = /*#__PURE__*/_react.default.createElement(_input.default.Password, (0, _extends2.default)({
      placeholder: intl.getMessage('tableForm.inputPlaceholder', '请输入'),
      ref: ref
    }, fieldProps));

    if (renderFormItem) {
      return renderFormItem(text, (0, _objectSpread2.default)({
        mode: mode
      }, fieldProps), _dom);
    }

    return _dom;
  }

  return null;
};

var _default = /*#__PURE__*/_react.default.forwardRef(FieldPassword);

exports.default = _default;