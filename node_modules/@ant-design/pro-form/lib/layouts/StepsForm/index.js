"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StepsFormProvide = void 0;

require("antd/es/form/style");

var _form = _interopRequireDefault(require("antd/es/form"));

require("antd/es/space/style");

var _space = _interopRequireDefault(require("antd/es/space"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("antd/es/button/style");

var _button = _interopRequireDefault(require("antd/es/button"));

require("antd/es/steps/style");

var _steps = _interopRequireDefault(require("antd/es/steps"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _react = _interopRequireWildcard(require("react"));

var _toArray = _interopRequireDefault(require("rc-util/lib/Children/toArray"));

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _classnames = _interopRequireDefault(require("classnames"));

var _proProvider = require("@ant-design/pro-provider");

var _proUtils = require("@ant-design/pro-utils");

var _StepForm = _interopRequireDefault(require("./StepForm"));

require("./index.less");

var _excluded = ["current", "onCurrentChange", "submitter", "stepsFormRender", "stepsRender", "stepFormRender", "stepsProps", "onFinish", "formProps", "containerStyle", "formRef", "formMapRef"];

var StepsFormProvide = /*#__PURE__*/_react.default.createContext(undefined);

exports.StepsFormProvide = StepsFormProvide;

function StepsForm(props) {
  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('pro-steps-form');
  var current = props.current,
      onCurrentChange = props.onCurrentChange,
      submitter = props.submitter,
      stepsFormRender = props.stepsFormRender,
      stepsRender = props.stepsRender,
      stepFormRender = props.stepFormRender,
      stepsProps = props.stepsProps,
      onFinish = props.onFinish,
      formProps = props.formProps,
      containerStyle = props.containerStyle,
      formRef = props.formRef,
      propsFormMapRef = props.formMapRef,
      rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  var formDataRef = (0, _react.useRef)(new Map());
  var formMapRef = (0, _react.useRef)(new Map());
  var formArrayRef = (0, _react.useRef)([]);

  var _useMountMergeState = (0, _proUtils.useMountMergeState)([]),
      _useMountMergeState2 = (0, _slicedToArray2.default)(_useMountMergeState, 2),
      formArray = _useMountMergeState2[0],
      setFormArray = _useMountMergeState2[1];

  var _useMountMergeState3 = (0, _proUtils.useMountMergeState)(false),
      _useMountMergeState4 = (0, _slicedToArray2.default)(_useMountMergeState3, 2),
      loading = _useMountMergeState4[0],
      setLoading = _useMountMergeState4[1];

  var intl = (0, _proProvider.useIntl)();
  /** 受控的方式来操作表单 */

  var _useMergedState = (0, _useMergedState3.default)(0, {
    value: props.current,
    onChange: props.onCurrentChange
  }),
      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
      step = _useMergedState2[0],
      setStep = _useMergedState2[1];
  /** 注册一个form进入，方便进行 props 的修改 */


  var regForm = (0, _react.useCallback)(function (name, childrenFormProps) {
    formMapRef.current.set(name, childrenFormProps);
  }, []);
  /** 接触挂载掉这个 form，同时步数 -1 */

  var unRegForm = (0, _react.useCallback)(function (name) {
    formMapRef.current.delete(name);
    formDataRef.current.delete(name);
  }, []);
  /** Children 计算完成之后，重新生成一下当前的步骤列表 */

  (0, _react.useEffect)(function () {
    setFormArray(Array.from(formMapRef.current.keys())); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [Array.from(formMapRef.current.keys()).join(',')]);
  (0, _react.useImperativeHandle)(propsFormMapRef, function () {
    return formArrayRef.current;
  });
  (0, _react.useImperativeHandle)(formRef, function () {
    var _formArrayRef$current;

    return (_formArrayRef$current = formArrayRef.current[step || 0]) === null || _formArrayRef$current === void 0 ? void 0 : _formArrayRef$current.current;
  }, [step]);
  /** ProForm处理了一下 from 的数据，在其中做了一些操作 如果使用 Provider 自带的，自带的数据处理就无法生效了 */

  var onFormFinish = (0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(name, formData) {
      var values, success;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              formDataRef.current.set(name, formData); // 如果是最后一步

              if (!(step === formMapRef.current.size - 1 || formMapRef.current.size === 0)) {
                _context.next = 19;
                break;
              }

              if (onFinish) {
                _context.next = 4;
                break;
              }

              return _context.abrupt("return");

            case 4:
              setLoading(true);
              values = _proUtils.merge.apply(void 0, [{}].concat((0, _toConsumableArray2.default)(Array.from(formDataRef.current.values()))));
              _context.prev = 6;
              _context.next = 9;
              return onFinish(values);

            case 9:
              success = _context.sent;

              if (success) {
                setStep(0);
                formArrayRef.current.forEach(function (form) {
                  var _form$current;

                  return (_form$current = form.current) === null || _form$current === void 0 ? void 0 : _form$current.resetFields();
                });
              }

              _context.next = 16;
              break;

            case 13:
              _context.prev = 13;
              _context.t0 = _context["catch"](6);
              // eslint-disable-next-line no-console
              console.log(_context.t0);

            case 16:
              _context.prev = 16;
              setLoading(false);
              return _context.finish(16);

            case 19:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[6, 13, 16, 19]]);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), // eslint-disable-next-line react-hooks/exhaustive-deps
  [step, formMapRef, onFinish]);

  var stepsDom = /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-steps-container"),
    style: {
      maxWidth: Math.min(formArray.length * 320, 1160)
    }
  }, /*#__PURE__*/_react.default.createElement(_steps.default, (0, _extends2.default)({}, stepsProps, {
    current: step,
    onChange: undefined
  }), formArray.map(function (item) {
    var itemProps = formMapRef.current.get(item);
    return /*#__PURE__*/_react.default.createElement(_steps.default.Step, (0, _extends2.default)({
      key: item,
      title: itemProps === null || itemProps === void 0 ? void 0 : itemProps.title
    }, itemProps === null || itemProps === void 0 ? void 0 : itemProps.stepProps));
  })));

  var onSubmit = function onSubmit() {
    var _from$current;

    var from = formArrayRef.current[step];
    (_from$current = from.current) === null || _from$current === void 0 ? void 0 : _from$current.submit();
  };
  /** 上一页功能 */


  var prePage = (0, _proUtils.useRefFunction)(function () {
    if (step < 1) return;
    setStep(step - 1);
  });

  var next = submitter !== false && /*#__PURE__*/_react.default.createElement(_button.default, (0, _extends2.default)({
    key: "next",
    type: "primary",
    loading: loading
  }, submitter === null || submitter === void 0 ? void 0 : submitter.submitButtonProps, {
    onClick: function onClick() {
      var _submitter$onSubmit;

      submitter === null || submitter === void 0 ? void 0 : (_submitter$onSubmit = submitter.onSubmit) === null || _submitter$onSubmit === void 0 ? void 0 : _submitter$onSubmit.call(submitter);
      onSubmit();
    }
  }), intl.getMessage('stepsForm.next', '下一步'));

  var pre = submitter !== false && /*#__PURE__*/_react.default.createElement(_button.default, (0, _extends2.default)({
    key: "pre"
  }, submitter === null || submitter === void 0 ? void 0 : submitter.resetButtonProps, {
    onClick: function onClick() {
      var _submitter$onReset;

      prePage();
      submitter === null || submitter === void 0 ? void 0 : (_submitter$onReset = submitter.onReset) === null || _submitter$onReset === void 0 ? void 0 : _submitter$onReset.call(submitter);
    }
  }), intl.getMessage('stepsForm.prev', '上一步'));

  var submit = submitter !== false && /*#__PURE__*/_react.default.createElement(_button.default, (0, _extends2.default)({
    key: "submit",
    type: "primary",
    loading: loading
  }, submitter === null || submitter === void 0 ? void 0 : submitter.submitButtonProps, {
    onClick: function onClick() {
      var _submitter$onSubmit2;

      submitter === null || submitter === void 0 ? void 0 : (_submitter$onSubmit2 = submitter.onSubmit) === null || _submitter$onSubmit2 === void 0 ? void 0 : _submitter$onSubmit2.call(submitter);
      onSubmit();
    }
  }), intl.getMessage('stepsForm.submit', '提交'));

  var getActionButton = (0, _proUtils.useRefFunction)(function () {
    var index = step || 0;

    if (index < 1) {
      return [next];
    }

    if (index + 1 === formArray.length) {
      return [pre, submit];
    }

    return [pre, next];
  });
  var nextPage = (0, _proUtils.useRefFunction)(function () {
    if (step > formArray.length - 2) return;
    setStep(step + 1);
  });

  var renderSubmitter = function renderSubmitter() {
    var submitterDom = getActionButton();

    if (submitter && submitter.render) {
      var _formArrayRef$current2;

      var submitterProps = {
        form: (_formArrayRef$current2 = formArrayRef.current[step]) === null || _formArrayRef$current2 === void 0 ? void 0 : _formArrayRef$current2.current,
        onSubmit: onSubmit,
        step: step,
        onPre: prePage
      };
      return submitter.render(submitterProps, submitterDom);
    }

    if (submitter && (submitter === null || submitter === void 0 ? void 0 : submitter.render) === false) {
      return null;
    }

    return submitterDom;
  };

  var formDom = (0, _toArray.default)(props.children).map(function (item, index) {
    var itemProps = item.props;
    var name = itemProps.name || "".concat(index);
    regForm(name, itemProps);
    /** 是否是当前的表单 */

    var isShow = step === index;
    var config = isShow ? {
      contentRender: stepFormRender,
      submitter: false
    } : {};
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)("".concat(prefixCls, "-step"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-step-active"), isShow)),
      key: name
    }, /*#__PURE__*/_react.default.cloneElement(item, (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, config), formProps), itemProps), {}, {
      name: name,
      step: index,
      key: name
    })));
  });
  var finalStepsDom = props.stepsRender ? props.stepsRender(formArray.map(function (item) {
    var _formMapRef$current$g;

    return {
      key: item,
      title: (_formMapRef$current$g = formMapRef.current.get(item)) === null || _formMapRef$current$g === void 0 ? void 0 : _formMapRef$current$g.title
    };
  }), stepsDom) : stepsDom;
  var submitterDom = renderSubmitter();
  return /*#__PURE__*/_react.default.createElement("div", {
    className: prefixCls
  }, /*#__PURE__*/_react.default.createElement(_form.default.Provider, rest, /*#__PURE__*/_react.default.createElement(StepsFormProvide.Provider, {
    value: {
      loading: loading,
      setLoading: setLoading,
      keyArray: formArray,
      next: nextPage,
      formArrayRef: formArrayRef,
      formMapRef: formMapRef,
      unRegForm: unRegForm,
      onFormFinish: onFormFinish
    }
  }, stepsFormRender ? stepsFormRender( /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, finalStepsDom, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-container"),
    style: containerStyle
  }, formDom)), submitterDom) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, finalStepsDom, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-container"),
    style: containerStyle
  }, formDom, /*#__PURE__*/_react.default.createElement(_space.default, null, renderSubmitter()))))));
}

function StepsFormWarp(props) {
  return /*#__PURE__*/_react.default.createElement(_proProvider.ConfigProviderWrap, null, /*#__PURE__*/_react.default.createElement(StepsForm, props));
}

StepsFormWarp.StepForm = _StepForm.default;
StepsFormWarp.useForm = _form.default.useForm;
var _default = StepsFormWarp;
exports.default = _default;